# 資料結構 405 旅遊路線規劃

TQC+ 程式設計：資料結構 405 旅遊路線規劃
最新一次更新時間：2024-06-06 16:42:32

1. 題目說明：
請依下列題意進行作答，使輸出值符合題意要求。

2. 設計說明：
(1) 市府新團隊上路後就積極推廣市民單車運動，去年委由專家決選出行政區內的幾處重要景點，每一個景點都有編號（1,2,...）。近期也已經佈建好景點與景點之間的單車專用道（雙向），方便市民與外地遊客利用單車進行城市的深度旅遊。

(2) 班上預計在期中考後辦理單車班遊，目前同學們已經開會決定了「起點（S）」與「終點（T）」（起點與終點不同）。

(3) 現在，需要你幫忙規劃景點的參觀路線，目標是找出「一條最短的參觀路線」：由起點（S）出發，經過其他景點（不用全部都經過），最後到達終點（T）。

3. 輸入輸出：
輸入說明
第 1 列：包含兩個正整數 M、N，以半形空白間隔。其中 M 為景點的數量、N 為單車車道的數量，且 5 ≤ M ≤ 30，4 ≤ N ≤ 200。
第 2 列：包含兩個正整數 S、T，以半形空白間隔。其中 S 為起點（景點編號），T 為終點（景點編號），且 1 ≤ S, T ≤ M。
第 3~N+2 列：每一列包含三個數字 a、b 和 d，以半形空白間隔。代表景點 a 與景點 b 之間鋪設的專用車道，其距離為 d 公里，其中 a、b 為景點編號，皆為整數（1 ≤ a, b ≤ M），而距離 d 為大於 0 的整數或浮點數。

輸出說明
最短的參觀路線長度，輸出結果以公里為單位，並四捨五入至小數點後第一位。

範例輸入1
6 8
1 6
1 2 10
1 3 15
2 4 12
2 6 15
3 5 10
4 5 2.58
4 6 1
6 5 5
範例輸出1
23.0
範例輸入2
7 9
1 7
1 2 2.1
1 3 6
2 4 4.9
3 4 8
4 5 10.0
4 6 15
5 6 6
5 7 3.14159
6 7 6
範例輸出2
20.1
待編修檔案

#================================================================================

import heapq

# 輸入 M: 景點數、N: 道路數
M, N = map(int, input().split())

# 起點 S、終點 T
S, T = map(int, input().split())

# 建立圖（編號從 1 到 M）
graph = {i: [] for i in range(1, M + 1)}

# 讀入邊
for _ in range(N):
    a, b, d = input().split()
    a = int(a)
    b = int(b)
    d = float(d)
    graph[a].append((b, d))
    graph[b].append((a, d))  # 雙向

# Dijkstra 最短路徑
dist = {i: float('inf') for i in range(1, M + 1)}
dist[S] = 0
pq = [(0, S)]  # (目前距離, 當前景點)

while pq:
    d_now, node = heapq.heappop(pq)
    if d_now > dist[node]:
        continue
    for neighbor, weight in graph[node]:
        new_dist = d_now + weight
        if new_dist < dist[neighbor]:
            dist[neighbor] = new_dist
            heapq.heappush(pq, (new_dist, neighbor))

# 輸出結果，四捨五入到小數點後一位
print(f"{dist[T]:.1f}")
